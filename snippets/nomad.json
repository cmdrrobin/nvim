{
    "nomad_job": {
        "prefix": "job",
        "body": [
            "job \"$1\" {",
            "\ttype = \"${2|service,system|}\"",
            "\tdatacenters = [\"dc1\"]",
            "",
            "\tupdate {",
            "\t\tmax_parallel = 1",
            "\t\thealth_check = \"checks\"",
            "\t\tmin_healthy_time = \"10s\"",
            "\t\tauto_revert = true",
            "\t}",
            "",
            "\t// GROUPS",
            "\tgroup \"$3\" {",
            "\t\t// network",
            "",
            "\t\t// services",
            "",
            "\t\t// TASKS",
            "\t\ttask \"$4\" {",
            "\t\t\t$0",
            "\t\t\t// artifacts",
            "",
            "\t\t\t// templates",
            "",
            "\t\t\t// resources",
            "\t\t}",
            "\t}",
            "}"
        ],
        "description": "declarative specification of tasks that Nomad should run"
    },
    "nomad_group": {
        "prefix": "group",
        "body": [
            "\tgroup \"$1\" {",
            "\t\t$0",
            "\t\t// network",
            "",
            "\t\t// services",
            "\t}"
        ],
        "description": "defines a series of tasks that should be co-located on the same Nomad client"
    },
    "nomad_task": {
        "prefix": "task",
        "body": [
            "\ttask \"$1\" {",
            "\t\t$0",
            "\t\t// artifacts",
            "",
            "\t\t// templates",
            "",
            "\t\t// resources",
            "\t}"
        ],
        "description": "creates an individual unit of work, such as a Docker container, web application, or batch processing"
    },
    "nomad_variables": {
        "prefix": "variable",
        "body": [
            "variable \"${1:variable-name}\" {",
            "\tdescription = \"$2\"",
            "\ttype = ${3:type-of-variable}",
            "}"
        ],
        "description": "define variable for the job"
    },
    "nomad_network": {
        "prefix": "network",
        "body": [
            "network {",
            "\tmode = \"bridge\"",
            "\tport \"$1\" {",
            "\t\tto = ${2:map-to-container-port}",
            "}"
        ],
        "description": "specify the networking requirements for the task group"
    },
    "nomad_service": {
        "prefix": "service",
        "body": [
            "service {",
            "\tport = \"$1\"",
            "",
            "\tcheck {",
            "\t\tport = \"$2\"",
            "\t\ttype = \"${3|http,tcp,script|}\"",
            "\t\tinterval = \"10s\"",
            "\t\ttimeout = \"5s\"",
            "\t}",
            "}"
        ],
        "description": "to register a service with the specified provider"
    },
    "nomad_sidecar_service": {
        "prefix": "connect_sidecar",
        "body": [
            "connect {",
            "\tsidecar_service {}",
            "}"
        ],
        "description": "allows configuring various options for the sidecar proxy managed by Nomad for Consul Connect integration"
    },
    "nomad_resources": {
        "prefix": "resources",
        "body": [
            "resources {",
            "\tcpu = 1000",
            "\tmemory = 1024",
            "}"
        ],
        "description": "resource requirements"
    },
    "nomad_ephemeral_disk": {
        "prefix": "ephemeral",
        "body": [
            "ephemeral_disk {",
            "\tmirate = true",
            "\tsize = $1",
            "\tsticky = true",
            "}"
        ],
        "description": "ephemeral disk requirements of the group"
    },
    "nomad_docker": {
        "prefix": "docker",
        "body": [
            "driver = \"docker\"",
            "",
            "config {",
            "\timage = \"$1\"",
            "}"
        ],
        "description": "use docker plugin for running Docker images"
    },
    "nomad_vault": {
        "prefix": "vault",
        "body": [
            "vault {",
            "\tpolicies = [$1]",
            "}"
        ],
        "description": "allows a task to specify that it requires a token from a HashiCorp Vault server"
    },
    "nomad_template_source": {
        "prefix": "template_source",
        "body": [
            "template {",
            "\tsource = \"${1:source-template-file}\"",
            "\tdestination = \"${2:destination}\"",
            "}"
        ],
        "description": "creates a convenient way to ship configuration files that are populated from environment variables"
    },
    "nomad_template_env": {
        "prefix": "template_data",
        "body": [
            "template {",
            "\tdata = <<-EOH",
            "\t\t$1",
            "\tEOH",
            "",
            "\tdestination = \"${2:destination}\"",
            "}"
        ],
        "description": "creates a convenient way to ship configuration files that are populated from environment variables"

    }
}
